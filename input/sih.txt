


Background: The AYUSH sector, encompassing Ayurveda, Yoga & Naturopathy, Unani, Siddha, and Homoeopathy, 
 is burgeoning with innovative startups. However, these startups face challenges in registering their ventures due to cumbersome,
 opaque, and decentralized processes. An efficient registration portal is crucial for fostering growth, facilitating regulatory compliance, 
 and promoting the integration of AYUSH solutions into mainstream healthcare. Description: Participants are tasked with creating an AYUSH Startup Registration Portal
 that simplifies and accelerates the registration process. The portal should be user-friendly, secure, and capable of handling a high volume of registrations. 

 Key features must include: User Authentication: Secure login for startups, government officials, and other stakeholders. Application Submission: Streamlined forms for
 submitting registration applications, with clear instructions and guidelines.
 Document Upload: Easy upload and management of necessary documents, ensuring compliance with AYUSH regulations. 
 Status Tracking: Real-time tracking of application status, notifications, and updates for applicants. Data Management: Efficient handling and storage of startup data,
 ensuring privacy and security.
 Support and Resources: Access to resources, FAQs, and support for startups during the registration process.
 Expected Outcome: The expected solutions should deliver a functional, scalable, and secure portal that addresses the current inefficiencies in the AYUSH startup 
 registration process. The portal should enhance user experience, reduce processing times, and ensure compliance with regulatory requirements. Participants should
 demonstrate innovation in user interface design, data security measures, and integration with existing AYUSH databases.
 The ultimate goal is to empower AYUSH startups, enabling them to contribute more effectively to the healthcare ecosystem.



# Dbms 

Basic 
Simple 2 phase 
Consecutive 2PL
Strict 2PL

All locks statements recieve first unlock statements 
Conservative -> the transaction predeclares its read and write set 
Strict -> The transaction doesn't release any of it exlusive lock until after it commits or aborts 

